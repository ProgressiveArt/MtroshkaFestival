@using MetroshkaFestival.Application.WebModels.Tournaments
@using MetroshkaFestival.Data.Entities
@using Microsoft.ApplicationInsights.AspNetCore.Extensions
@using Microsoft.AspNetCore.Identity
@model MetroshkaFestival.Application.Queries.Models.Tournaments.TournamentListModel
@inject SignInManager<User> _signInManager
@{
    ViewData["Title"] = "Фестиваль \"МЕТРОШКА\" - Турниры";
    ViewData["Controller"] = "Tournament";
    var isAuthenticated = _signInManager?.Context?.User?.Identity?.IsAuthenticated ?? false;
    var returnUrl = Context.Request.GetUri().AbsoluteUri;
}
<div class="row">
    <h2 class="mt-3 col-sm">Турниры | Всего: @Model.Tournaments.TotalItemCount</h2>
    @if (isAuthenticated)
    {
        <div class="mt-3 mb-2 col-sm-2 d-flex justify-content-center">
            <a asp-controller="Tournament" asp-action="GetAddTournamentPage" asp-route-returnUrl="@returnUrl" class="btn btn-secondary">Добавить турнир</a>
        </div>
    }
    <div class="dropdown-divider"></div>
</div>

<form asp-controller="Tournament" asp-action="Index" method="get" class="form-inline row" role="search">
    <div class="input-group mr-2 col-md-auto pe-1">
        <div class="input-group-prepend col-sm-2">
            <span class="input-group-text">Поиск по названию</span>
        </div>
        @Html.TextBox("Filter.Name", null, new {placeholder = "Введите название турнира", @class = "form-control searchinput"})
    </div>

    <div class="row row-cols-auto pe-1 m-0 mt-2">
        <div class="input-group mr-2 col-sm">
            <div class="input-group-prepend col-sm-6">
                <span class="input-group-text">Год проведения</span>
            </div>
            @Html.DropDownListFor(x => x.Query.Filter.YearOfTour, ViewBag.Years as IEnumerable<SelectListItem>, new {@class = "form-control"})
        </div>

        <div class="input-group mr-2 col-sm">
            <div class="input-group-prepend col-sm-6">
                <span class="input-group-text">Город проведения</span>
            </div>
            @Html.DropDownListFor(x => x.Query.Filter.CityId, ViewBag.Cities as IEnumerable<SelectListItem>, new {@class = "form-control"})
        </div>
    </div>

    <div class="text-center mt-3 mb-2 col-sm">
        <button class="btn btn-outline-success col-sm-2" type="submit">Поиск</button>
        <a asp-controller="Tournament" asp-action="Index" class="btn btn-outline-secondary col-sm-2">Сбросить фильтры</a>
    </div>
</form>

<div class="text-center col-sm-auto">
    <table class="table table-hover col-sm-auto">
        <thead>
        <tr>
            <th scope="col" class="table-dark w-auto">
                <sort asp-all-route-data="Model.Query.GetAllQueryData()"
                      sort-name="@TournamentSortingEnum.Id" class="link-info">
                    ID
                </sort>
            </th>
            <th scope="col" class="table-dark col-sm-4">
                Турниры(
                <sort asp-all-route-data="Model.Query.GetAllQueryData()"
                      sort-name="@TournamentSortingEnum.Name" class="link-info">
                    Название
                </sort>,
                <sort asp-all-route-data="Model.Query.GetAllQueryData()"
                      sort-name="@TournamentSortingEnum.City" class="link-info">
                    Город
                </sort>,
                <sort asp-all-route-data="Model.Query.GetAllQueryData()"
                      sort-name="@TournamentSortingEnum.YearOfTour" class="link-info">
                    Год
                </sort>)
            </th>
            <th scope="col" class="table-dark w-auto">Статус приёма заявок</th>
            <th scope="col" class="table-dark w-auto">Статус турнира</th>
            @if (isAuthenticated)
            {
                <th scope="col" class="table-dark w-auto">Действие</th>
            }
        </tr>
        </thead>
        @if (Model.Tournaments.Any())
        {
            <tbody>
            @foreach (var tournamentModel in Model.Tournaments)
            {
                <tr>
                    <th scope="row" class="text-break">@tournamentModel.Id</th>
                    <td style="transform: rotate(0);">
                        <a asp-controller="Tournament" asp-action="TournamentSummary" class="stretched-link link-dark"
                           asp-all-route-data="@(new Dictionary<string, string> {{"returnUrl", returnUrl}, {"tournamentId", tournamentModel.Id.ToString()}})">
                            @tournamentModel.Name 
                            @if (isAuthenticated)
                            {
                                <span class="badge bg-danger">@tournamentModel.CountRequests</span>
                            }
                        </a>
                    </td>
                    <td>@(tournamentModel.IsSetOpenUntilDate > DateTime.Now ? "Открыт до " + tournamentModel.IsSetOpenUntilDate + "(UTC)": "Приём заявок завершен")</td>
                    <td>@(tournamentModel.IsTournamentOver ? "Турнир завершен" : "Активный")</td>
                    @if (isAuthenticated)
                    {
                        <td class="p-1 text-center">
                            @if (tournamentModel.CanBeRemoved)
                            {
                                <a asp-controller="Tournament" asp-action="DeleteTournament" asp-route-tournamentId="@tournamentModel.Id" class="btn btn-outline-danger btn-md btn-block">Удалить</a>
                            }
                            else
                            {
                                <span tabindex="0" data-bs-toggle="tooltip" title="Невозможно удалить турнир имеющий группы">
                                    <button class="btn btn-outline-secondary btn-md btn-block" type="button" disabled>Удалить</button>
                                </span>
                            }
                        </td>
                    }
                </tr>
            }
            </tbody>
        }
    </table>
</div>

@if (Model.Error != null)
{
    <div id="my-alert" class="alert alert-danger alert-dismissible fade show" role="alert">
        <div class="">
            <div class="text-danger m-0 w-50">@Model.Error</div>
        </div>
    </div>
}

@if (Model.Tournaments.PageCount > 1)
{
    <nav aria-label="navigation">
        <pager class="pager-container"
               options="PagedList.Core.Mvc.PagedListRenderOptions.Bootstrap4Full"
               list="Model.Tournaments"
               asp-area="Admin"
               asp-controller="Tournament"
               asp-action="Index"
               param-page-number="Page.NumPage"
               asp-all-route-data="@Model.Query.GetAllQueryData()"/>
    </nav>
}

@section Scripts{
    <script>
        $(function(){
            window.setTimeout(function(){
                $('#my-alert').alert('close');
            },5000);
        });
    </script>
}